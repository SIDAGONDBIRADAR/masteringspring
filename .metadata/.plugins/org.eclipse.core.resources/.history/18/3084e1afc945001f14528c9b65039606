package com.eazybytes.eazyschool.service;

import com.eazybytes.eazyschool.EazySchoolConstants;
import com.eazybytes.eazyschool.model.Contact;
import com.eazybytes.eazyschool.repository.ContactRepository;

import lombok.extern.slf4j.Slf4j;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Service;
import org.springframework.web.context.annotation.ApplicationScope;
import org.springframework.web.context.annotation.RequestScope;
import org.springframework.web.context.annotation.SessionScope;

/*
@Slf4j, is a Lombok-provided annotation that will automatically generate an SLF4J
Logger static property in the class at compilation time.
* */
@Slf4j
@Service
// @RequestScope
// @SessionScope
@ApplicationScope
public class ContactService {

	@Autowired
	ContactRepository contactRepository;

//    private int counter = 0;

	public ContactService() {
		System.out.println("Contact Service Bean initialized");
	}

	/**
	 * Save Contact Details into DB
	 * 
	 * @param contact
	 * @return boolean
	 */
	public boolean saveMessageDetails(Contact contact) {
		boolean isSaved = false;
//        //TODO - Need to persist the data into the DB table
////        log.info(contact.toString());
//        contact.setStatus(EazySchoolConstants.OPEN);
//        contact.setCreatedAt(LocalDateTime.now());
//        contact.setCreatedBy(EazySchoolConstants.ANNYMOUS);
		Contact savedContact = contactRepository.save(contact);

		if (savedContact.getContactId() > 0 && savedContact != null) {
			isSaved = true;
		}
		return isSaved;
	}

//    public int getCounter() {
//        return counter;
//    }
//
//    public void setCounter(int counter) {
//        this.counter = counter;
//    }

	public List<Contact> findMsgsWithOpenStatus() {
//		return contactRepository.findContactByStatus(EazySchoolConstants.OPEN);
		contactRepository.findb
	}

	public boolean updateMessage(int id, String updatedBy) {
		boolean isUpdated = false;
		int updated = contactRepository.updateOpenToClose(id, EazySchoolConstants.CLOSED, updatedBy);
		if (updated > 0) {
			isUpdated = true;
		}
		return isUpdated;
	}
}
