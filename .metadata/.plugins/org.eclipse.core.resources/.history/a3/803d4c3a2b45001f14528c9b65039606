package com.eazybytes.eazyschool.aspect;

import java.time.Duration;
import java.time.Instant;

import org.aopalliance.intercept.Joinpoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.AfterThrowing;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.springframework.stereotype.Component;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
@Aspect
public class LoggerAspect {

	@Around("execution(* com.eazybytes.eazyschool..*.*(..))")
	public Object log(ProceedingJoinPoint joinPoint) throws Throwable {
		log.info("Method execution starts :" + joinPoint.getSignature().toString());
		Instant start = Instant.now();
		Object returnObj = joinPoint.proceed();
		Instant end = Instant.now();
		long timeTaken = Duration.between(start, end).toMillis();
		log.info("Time took to execute method :" + joinPoint.getSignature().toString() + " is :" + timeTaken);
		log.info("Method execution ends :" + joinPoint.getSignature().getName());
		return returnObj;
	}
	
	@AfterThrowing(value ="execution(* com.eazybytes.eazyschool.controller.*.*(..))",throwing = "ex")
	public void logException(Joinpoint joinpoint,Exception ex) throws Throwable {
		log.error(joinpoint.proceed()+" An exception happened due to :"+ex.getMessage());
	}
	

}
